# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for types exported from the `nested_form` gem.
# Please instead update this file by running `bin/tapioca gem nested_form`.

# source://nested_form//lib/nested_form/engine.rb#3
module NestedForm; end

# source://nested_form//lib/nested_form/builders.rb#4
class NestedForm::Builder < ::ActionView::Helpers::FormBuilder
  include ::NestedForm::BuilderMixin
end

# source://nested_form//lib/nested_form/builder_mixin.rb#2
module NestedForm::BuilderMixin
  # source://nested_form//lib/nested_form/builder_mixin.rb#90
  def fields_for_nested_model(name, object, options, block); end

  # source://nested_form//lib/nested_form/builder_mixin.rb#74
  def fields_for_with_nested_attributes(association_name, *args); end

  # Adds a link to insert a new associated records. The first argument is the name of the link, the second is the name of the association.
  #
  #   f.link_to_add("Add Task", :tasks)
  #
  # You can pass HTML options in a hash at the end and a block for the content.
  #
  #   <%= f.link_to_add(:tasks, :class => "add_task", :href => new_task_path) do %>
  #     Add Task
  #   <% end %>
  #
  # You can also pass <tt>model_object</tt> option with an object for use in
  # the blueprint, e.g.:
  #
  #   <%= f.link_to_add(:tasks, :model_object => Task.new(:name => 'Task')) %>
  #
  # See the README for more details on where to call this method.
  #
  # source://nested_form//lib/nested_form/builder_mixin.rb#19
  def link_to_add(*args, &block); end

  # Adds a link to remove the associated record. The first argment is the name of the link.
  #
  #   f.link_to_remove("Remove Task")
  #
  # You can pass HTML options in a hash at the end and a block for the content.
  #
  #   <%= f.link_to_remove(:class => "remove_task", :href => "#") do %>
  #     Remove Task
  #   <% end %>
  #
  # See the README for more details on where to call this method.
  #
  # source://nested_form//lib/nested_form/builder_mixin.rb#60
  def link_to_remove(*args, &block); end

  private

  # source://nested_form//lib/nested_form/builder_mixin.rb#106
  def fields_blueprint_id_for(association); end
end

# source://nested_form//lib/nested_form/engine.rb#4
class NestedForm::Engine < ::Rails::Engine
  class << self
    # source://activesupport/7.1.3.3/lib/active_support/callbacks.rb#70
    def __callbacks; end
  end
end

# source://nested_form//lib/nested_form/view_helper.rb#4
module NestedForm::ViewHelper
  # source://nested_form//lib/nested_form/view_helper.rb#39
  def after_nested_form(association, &block); end

  # source://nested_form//lib/nested_form/view_helper.rb#5
  def nested_form_for(*args, &block); end

  private

  # source://nested_form//lib/nested_form/view_helper.rb#49
  def after_nested_form_callbacks; end
end
